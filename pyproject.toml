[tool.poetry]
name = "cognito-serverless-platform"
version = "1.0.0"
description = ""
authors = ["Chandra Shekhar Goka <chandrashekhar.goka@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.8"
doit = "^0.32.0"
nose = "^1.3.7"
structlog = "^20.2.0"
arrow = "^1.0"
dict-to-dataclass = "^0.0.8"
poetry = "^1.1.8"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
doit = "^0.32.0"
flake8 = "^3.8.3"
bandit = "^1.6.2"
cfn-lint = "^0.35.0"
aws-sam-cli = "^1.2.0"
moto = "^1.3.14"
nose = "^1.3.7"
taskipy = "^1.5.1"

[tool.taskipy.tasks]

prep_s3 = """aws s3api head-bucket \
  --profile "${AWS_PROFILE}" \
  --bucket "cognito-serverless-platform-${STAGE}" >/dev/null 2>&1 \
  || aws s3 mb \
  --profile "${AWS_PROFILE}" \
  --region "${AWS_DEFAULT_REGION}" \
  "s3://cognito-serverless-platform-${STAGE}" """

clean = "rm -rf ./.build && rm -rf ./.aws-sam"

generate_requirements_txt = """mkdir -p ./.build && poetry update && poetry export --without-hashes -f requirements.txt > ./.build/requirements.txt"""

generate_lambda_deps = """pip install \
  --disable-pip-version-check \
  -r ./.build/requirements.txt \
  -t ./.build/dependencies/python/lib/python3.8/site-packages"""

black = "black cognito_serverless_platform"

sam_build = "sam build"

sam_deploy = """sam deploy \
  --debug \
  --stack-name "${STAGE}-cognito-serverless-platform" \
  --s3-prefix "${STAGE}" \
  --s3-bucket "cognito-serverless-platform-${STAGE}" \
  --parameter-overrides "ParameterKey=Stage,ParameterValue=${STAGE}" \
  --profile "${AWS_PROFILE}" \
  --region "${AWS_DEFAULT_REGION}" \
  --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM CAPABILITY_IAM \
  --no-fail-on-empty-changeset"""

clean_deploy = """poetry run task clean && \
                poetry run task black && \
                poetry run task generate_requirements_txt && \
                poetry run task generate_lambda_deps && \
                poetry run task sam_build && \
                poetry run task sam_deploy"""

deploy = """poetry run task black && \
                poetry run task sam_build && \
                poetry run task sam_deploy"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
